Złożoność akceptowalna (1.0pkt): O(V E log V) lub O(V^3)
Złożoność wzorcowa (+3.0pkt): O(E log V)
Duathlon na orientację polega na tym, że zawodnik najpierw biegnie ze startu s do wybranego
przez siebie roweru (dowolnego z wielu dostępnych), a następnie jedzie na tym rowerze do mety
t (może też biec prosto do mety, nie biorąc roweru). Gdy zawodnik wybierze jakiś rower, to
nie może go już zmienić (ale nie musi w danym punkcie brać roweru, nawet jak jest dostępny).
Luiza Silnoręka startuje w takich zawodach i chce zaplanować to najszybsze pokonanie trasy.
Trasa reprezentowana jest jako graf ważony, w którym wirezchołki to punkty orientacyjne (w-
liczając w to start s i metę t) a krawędzie to ścieżki, którymi można się między tymi punktami
poruszać. Każda krawędź (ścieżka) ma czas wyrażony w minutach, jaki Luiza potrzebuje, żeby
ją przebiec (są to zawsze liczby naturalne). W każdym punkcie orientacyjnym może być jeden,
kilka, lub zero rowerów. Każdy rower opisany jest przez dwie liczby naturalne, p i q. Wiadomo,
że jeśli Luiza potrzebuje x minut aby przebyć pewną ścieżkę, to na rowerze opisanym przez
p i q przejedzie ją w czasie x * p/q
(o ile możnaby oczekiwać, że p < q, to niektóre rowery są tak
niewygodne, że ten warunek nie zachodzi).
Proszę zaimplementować funkcję armstrong(B, G, s, t), która otrzymuje na wejściu listę B
opisującą dostępne rowery, graf G opisujący trasę, oraz numery wierzchołków s i t, a zwraca
najmniejszą liczbę minut (zaokrągloną w dół), jaką Luiza potrzebuje na pokonanie trasy duathlonu.
Lista B zawiera trójki postaci (i, p, q), gdzie i to numer wierzchołka, w którym jest rower o
parametrach p i q. W danym wierzchołku może być kilka rowerów i wówczas trójka z tą samą
wartością i pojawia się w danych kilka razy.
Graf G ma wierzchołki o numerach od 0 do n − 1, jest nieskierowany i jest reprezentowany przez
listę krawędzi. Każda krawędź to trójka w postaci (u, v, w), gdzie u i v to numery wierzchołków,
które łączy, a w to liczba minut, przez którą Luiza przebiega tę krawędź.
